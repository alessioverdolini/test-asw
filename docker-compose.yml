version: '3'
services:

  #CONSUL
  consul:
    image: consul

  #API GATEWAY
  apigateway:
    build: ./api-gateway
    ports:
    - 8090:8080
    depends_on:
      - consul

  #POSTGRES RICETTE
  postgres-ricette:
    container_name: postgresRicette
    image: postgres
    volumes:
      - "$PWD/postgres:/docker-entrypoint-initdb.d"
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ricette

  #POSTGRES CONNESSIONI
  postgres-connessioni:
    container_name: postgresConnessioni
    image: postgres
    volumes:
      - "$PWD/postgres:/docker-entrypoint-initdb.d"
    ports:
      - 5433:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: connessioni

  #POSTGRES RICETTE-SEGUITE
  postgres-ricette-seguite:
    container_name: postgresRicetteSeguite
    image: postgres
    ports:
      - 5434:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ricette-seguite

  #SERVIZIO RICETTE
  ricette-service:
     build: ./ricette
     depends_on:
       - consul
       - postgres-ricette
       - kafka
#     links:
#      - kafka:kafka
     
  #SERVIZIO CONNESSIONI
  connessioni:
     build: ./connessioni
     depends_on:
       - consul
       - postgres-connessioni
       - kafka
#     links:
#      - kafka:kafka

  #SERVIZIO RICETTE SEGUITE
  ricette-seguite:
    build: ./ricette-seguite
    depends_on:
      - consul
      - postgres-ricette-seguite
      - kafka
#     links:
#      - kafka:kafka

  zookeeper:
    image: wurstmeister/zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - 2181:2181
      
  kafka:
    image: wurstmeister/kafka:latest
    depends_on:
      - zookeeper
    restart: always
    ports:
      - 9092:9092
    environment:
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_CREATE_TOPICS: "ricette-service-event-channel:2:1, connessioni-service-event-channel:2:1"
      

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
